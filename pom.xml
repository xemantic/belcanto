<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ belcanto - mini CRM system linking specialist with their customers.
  ~ This project explores possibilities of building Model Driven Applications
  ~ on top of spring-boot.
  ~
  ~ Copyright (C) 2017  Kazimierz Pogoda
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.xemantic.belcanto</groupId>
  <artifactId>belcanto</artifactId>
  <version>1.0-SNAPSHOT</version>

  <!-- Master pom is just referencing child modules and setting up default versions of dependencies -->
  <packaging>pom</packaging>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!--
      All the libraries used by the spring-data project are provided in synchronized
      release cycle. In order to use the most recent version, including service updates,
      this property needs to be set.
     -->
    <spring-data-releasetrain.version>Kay-SR8</spring-data-releasetrain.version>
    <spring-boot.version>2.0.3.RELEASE</spring-boot.version>
  </properties>

  <modules>
    <module>belcanto-model</module>
    <module>belcanto-service</module>
  </modules>

  <!--
    Dependencies managed in master pom should never be associated with scope as it
    might lead to ambiguity in how they are going to be resolved. The only exception
    is for the special import scope.
   -->
  <dependencyManagement>
    <dependencies>

      <!--
        specifying default dependencies on own modules makes their use more consistent
        across the whole project, prevents from using the wrong version, and makes it
        easier for the maven-release-plugin to prepare stable version of all the poms.
       -->
      <dependency>
        <groupId>com.xemantic.belcanto</groupId>
        <artifactId>belcanto-model</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- standard java injection makes the components possibly more portable -->
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
      </dependency>

      <!-- import of all the spring-boot and spring data-dependencies, spring data should be first -->
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-releasetrain</artifactId>
        <type>pom</type>
        <version>${spring-data-releasetrain.version}</version>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <type>pom</type>
        <version>${spring-boot.version}</version>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>1.6.1</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
